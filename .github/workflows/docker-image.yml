name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Updated version

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1  # Define the region
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 466670870088.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: docker build -t my-app:latest .

      - name: Tag Docker image
        run: docker tag my-app:latest 466670870088.dkr.ecr.us-east-1.amazonaws.com/newuser-ecr:latest  # Correct ECR repo name

      - name: Push Docker image to ECR
        run: docker push 466670870088.dkr.ecr.us-east-1.amazonaws.com/newuser-ecr:latest  # Correct ECR repo name

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH to EC2 and deploy the Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest Docker image
            docker pull 466670870088.dkr.ecr.us-east-1.amazonaws.com/newuser-ecr:latest

            # Stop and remove the existing container if it existss
            docker stop my_container || true
            docker rm my_container || true

          
            docker run -d -p 80:80 --name my_container 466670870088.dkr.ecr.us-east-1.amazonaws.com/newuser-ecr:latest
